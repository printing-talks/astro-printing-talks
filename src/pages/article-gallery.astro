---
import { client } from "../../tina/__generated__/client";
import ResponsiveCard from "../components/ResponsiveCard";
import Boilerplate from "../layouts/Boilerplate.astro";
interface Article {
  thumbnail: string | null;
  date: string | null;
  author: string | null;
  description: string | null;
  categories: (string | null)[] | null;
  title: string;
  slug: string;
}
async function fetchArticles() {
  let articles: Article[] = [];
  try {
    const articlesResponse = await client.queries.articleConnection();
    const edges = articlesResponse.data.articleConnection?.edges ?? [];

    articles = edges.reduce((acc: Article[], edge) => {
      if (edge && edge.node) {
        acc.push({
          thumbnail: edge.node.thumbnail ?? null,
          date: edge.node.date ?? null,
          author: edge.node.author ?? null,
          description: edge.node.description ?? null,
          categories: edge.node.categories ?? null,
          title: edge.node.title ?? "",
          slug: edge.node.slug ?? "",
        });
      }
      return acc;
    }, [] as Article[]);
  } catch (error) {
    console.error("Error fetching articles:", error);
    // Handle error as appropriate
  }
  return articles;
}

// Fetch articles during build
const articles = await fetchArticles();
---

<Boilerplate
  title="Printing Talks - Articles"
  description="Explore the Printing Talks articles"
>
  <div class="flex flex-col">
    <div
      class="top-banner flex flex-col h-[12rem] md:h-[14rem] justify-center gap-1 self-stretch border-b border-solid p-4 md:px-12"
    >
      <h4 class="font-medium text-3xl">Articles</h4>
      <p class="text-neutral text-xl">
        Learn more about our work and the services we provide.
      </p>
    </div>

    <div class="container mx-auto space-y-6 p-8">
      {
        articles.map((article) => (
          <ResponsiveCard
            client:load
            imageUrl={article.thumbnail}
            title={article.title}
            content={article.description}
            slug={article.slug}
          />
        ))
      }
    </div>
  </div>
</Boilerplate>
